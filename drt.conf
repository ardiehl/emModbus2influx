# em2influx sonfiguration file
# long options can be used, see em2influx --help
#
# options given at command line will override the
# ones on this file
# The first section until a line beginning with [ may contain command line
# options. Values have to be specified exactly the same way as if command
# line arguments would be used. (e.g. no blanks allowed after =)

# verbosity
#verbose=10

# default Influx measurement to use
# can be overridden by a meter definition
measurement=energyMeter

# Influx server
#server=lnx.armin.d

# influxdb v1 database name
# db=myDB

# influx v1 user and password (optional)
#user=myInfluxV1_user
#password=myInfluxV1_password

# Influxdb V2 API (do not specify db, user or password)
# organization
org=diehl

# Influx bucket to use (like db in V1)
#bucket=ad
bucket=test

# name for the tag (not the value, value equals meter name), defaults to Meter=
# can be overridden per meter definition
tagname=Device

# access token (replaced user/password)
token=8fSHguY6Cspa7-rF0w4_c7ejN9ytVOXPUuc9BrKlo8p90f19RjaqzBh5oAkOi4ztVzukpgBEmp_2GbVmVdL1og==

# MQTT
# hostname without protocol and port
mqttserver=lnx.armin.d
#mqttport=1883
mqttprefix=ad/house/energy/
mqttstatprefix=ad/house/stat/

#keep messages on mqtt server and send changes only
mqttretain=1

# Serial port for modbus RTU, not needed if only IP connections will be used (specified per meter)
#device=/dev/ttyUSB0
device=/dev/ttyAMA0,/dev/ttyUSB_fbh
baud=9600
parity=e
stopbits=1

poll=5

# [MeterType] sections
# ====================
# energy meter types, one [MeterType] section per meter type
# name="xxx"                 defines the name/type (case sensitive)
#
# read=start,numRegs         read the given number of registers, read can be specified multiple times
# readid=id[,start,numRegs]  read, id will be the sunspec id of the block, start will be the offset in that block
#                            starting with 0
# readid=id                  reads the whole sunspec block
# mqttqs=x                   set the qos value for mqtt (0: At most once, 1:At least once, 2: Exactly once)
# mqttretain=0|1             1: The broker stores the last retained message and the corresponding QoS for that topic

# read and readid will read the specified number of registers in a buffer.
# After that, it will be checked if a defined register is within that
# buffer and if yes, the value of the register will be read from the buffer.
# After all read and readid definition have been processed and there are
# register definitions not yet read, a single read will be performed for
# each of the remaining registers. This works fine but may result in a poor
# performance when using modbus tcp.

# sunspec[=startAddr]
# Starts scanning for sunspec (e.g. Fronius) id's at the given address, if no
# address is given, 40000 will be used.
# When using sunspec, register addresses will be offsets within each id block
# (starting with 0). At least before the first register definition the id=
# option is required to specify the id of the block to be used. The register
# address will then be calculated based on the offset of the sunspec block and
# the given register address. Multiple id= options with different id's can
# be used.
#
# influx=0|1         0 will disable this register for influxdb, sets default
#                    for registers below
# mqtt=0|1           0 will disable this register for mqtt, sets default for
#                    registers below

# Registers
# =========
## id=id
##  specify the sunspec id to be used for the following register definitions,
##  can be omitted if the id has already be defined via readid=
#
# for each register,
#   "name"=startRegisterNumber_or_SunspecOffset
# or
#   "name"="Formula"
# has to be specified. Additional, optional parameters may be specified
# (separated by comma). If no data type is specified, int16 will be assumed
# A name must be specified with quotes to be able to use reserved words like "name"
#
# Options
#  data types
#   float         - Floating point format (IEEE 754) = abcd
#   floatabcd, floatbacd, floatcdab
#                 - Floating point in different byte order
#   int int16     - integer 16 bit
#   int32         - integer 32 bit
#   int48         - integer 48 bit
#   int64         - integer 64 bit
#   uint uint16   - unsigned integer 16 bit
#   uint32        - unsigned integer 32 bit
#   uint48        - unsigned integer 48 bit
#   uint64        - unsigned integer 64 bit (only 63 bits will be stored)
#
# arr=name           This option is applicable for mqtt only and will be
#
#
# force=int|float    converts to float or integer (to have the same influx
#                    data type for different sources)
# dec=x              number of decimals, has to be >= 0
# div=x              Divider
# mul=x              Multiplier
# sf=                Register offset for sunspec scaling factor
# formula="..."      the result of the formula will be the new value.
#                    The current value as well as the values of other registers
#                    can be accessed by its name. Formulas will be executed
#                    after all registers within a meter has been read.
# influx=0|1         0 will disable this register for influxdb
# mqtt=0|1           0 will disable this register for mqtt
#
# settarif=tarifNum,startRegisterNumber_or_SunspecOffset,value,...
#                    defines the sequence to be sent to the meter for setting
#                    the tariff 1,2,3 or 4
#                    tarifNum has to be 1,2,3 or 4
#                    value is the value written to the specified register,
#                    more values can be specified for the following registers
#                    if the same value has to be written multiple times
#                    numwrites*value can be specified, e.g. for 4 times 0:
#                    settarif=1,0x300,0,0,0,0
#                    settarif=1,0x300,4*0
#
# init=startRegisterNumber_or_SunspecOffset,value,...
#                    defines register values sent for initialization.
#                    value[s] as described in settarif
#

[MeterType]
name = "DRT428M_3"

# set tarif time 1 for tarif 1 at any time and disable other tarif times
#init = 0x300,0,1,0*10
#init = 0x030c,0*12
#init = 0x0318,0*12
#init = 0x0324,0*12
#init = 0x0330,0*12
#init = 0x033c,0*12
#init = 0x0348,0*12
#init = 0x0354,0*12

# set current meter tarif
# settarif = n, Address or sunspec offset, uint16 value [,uint16 value ...]
# n is in range of 1 to 4
settarif = 1,0x300,0,1
settarif = 2,0x300,0,2
settarif = 3,0x300,0,3
settarif = 4,0x300,0,4

"SW" = 0x04,float,dec=4
"HW" = 0x06,float,dec=4

# read voltage, current and power
read =0x0e,22

# total consumption
read= 0x100,2

# consumption per tarif
read=0x130,38

# line voltage
"u1"=0x0e,float ,dec=1,influx=0
"u2"=0x10,float ,dec=1,influx=0
"u3"=0x12,float ,dec=1,influx=0

# active power, is in KW, recalc to watt
"p" =0x1c,float,mul=1000,force=int,influx=0
"p1"=0x1e,float,mul=1000,force=int,imax
"p2"=0x20,float,mul=1000,force=int,imax
"p3"=0x22,float,mul=1000,force=int,imax

# reactive power
#"q1"=0x26,float,arr="p",dec=4
#"q2"=0x28,float,arr="p",dec=4
#"q3"=0x2a,float,arr="p",dec=4

# apparent power
#"s1"=0x2e,float,arr="p",dec=4
#"s2"=0x30,float,arr="p",dec=4
#"s3"=0x32,float,arr="p",dec=4

# current
#"i1"=0x16,float,arr="p",dec=4
#"i2"=0x18,float,arr="p",dec=4
#"i3"=0x1a,float,arr="p",dec=4

# total energy
"kwh"=0x100,float,dec=2,influx=0
"kwh_L1"=0x102,float,dec=2,influx=0
"kwh_L2"=0x104,float,dec=2,influx=0
"kwh_L3"=0x106,float,dec=2,influx=0
"kwh_FWD"=0x108,float,dec=2,influx=0
"kwh_FWD_L1"=0x10a,float,dec=2,influx=0
"kwh_FWD_L3"=0x10c,float,dec=2,influx=0
"kwh_FWD_L2"=0x10e,float,dec=2,influx=0
"kwh_REV"=0x110,float,dec=2,influx=0
"kwh_REV_L1"=0x112,float,dec=2,influx=0
"kwh_REV_L3"=0x114,float,dec=2,influx=0
"kwh_REV_L2"=0x116,float,dec=2,influx=0

"kwh_R"=0x118,float,dec=2,influx=0
"kwh_R_L1"=0x11a,float,dec=2,influx=0
"kwh_R_L3"=0x11c,float,dec=2,influx=0
"kwh_R_L2"=0x11e,float,dec=2,influx=0

# energy for up to 4 tarifs
"kwh_1"=0x130,float,force=int,influx=0
"kwh_2"=0x13c,float,force=int,influx=0
"kwh_3"=0x148,float,force=int,influx=0
"kwh_4"=0x154,float,force=int,influx=0

#influxwritemult=360		# twice per hour
influxwritemult=6			# 30 seconds


[Meter]
disabled=1
address=8
type="DRT428M_3"
name="G2"

[Meter]
disabled=1
address=9
type="DRT428M_3"
name="G1"


[Meter]
disabled=0
address=10	# modbus address of meter
type="DRT428M_3"
name="Allgemein"

[Meter]
disabled=1
address=11	# modbus address of meter
type="DRT428M_3"
name="Halle"

[Meter]
disabled=1
address=7	# modbus address of meter
type="DRT428M_3"
name="HK"

[Meter]		# heat pump
disabled=1
address=6
type="DRT428M_3"
name="WP"


